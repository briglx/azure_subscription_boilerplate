name: Management RG Deployment
on:
  push:
    branches:
      - dev
  workflow_dispatch:
    inputs:
      deleteAll:
        description: 'Delete Resource Group'
        type: boolean
        required: true 
      deployConnectivity:
        description: 'Deploy Connectivity Resource Group'
        type: boolean
        required: false 
      location:
        description: 'Resource Group location'
        required: true
        default: 'westus2'
        type: string
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev' 
        type: choice
        options:
        - dev
        - prod 

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:

  Delete_Resources:
    name: Delete Connectivity Resources
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.deleteAll == 'true' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: OIDC Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} 
      - name: Delete Resources
        id: task-delete-resources
        run: |

          # Add Dev prefix
          target_env=${{github.event.inputs.environment}}
          prefix=''

          if [ target_env == "dev" ]; then
            prefix="DEV_"
          fi

          # Get Resource Group region
          rg_region=${{github.event.inputs.location}}
          rg_name=$prefix_rg_connectivity_$rg_region

          echo delete connectivity rg in $rg_region
          az group delete --name $rg_name --yes

  Connectivity_Resources:
    name: Create Connectivity Resources
    runs-on: ubuntu-latest
    needs: Delete_Resources
    if: |
      !failure() && !cancelled() && 
      (github.event.inputs.deployConnectivity == 'true')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: OIDC Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} 
      - name: Create Resources
        id: task-create-resources
        run: |

          # Get params
          target_env=${{github.event.inputs.environment}}
          rg_region=${{github.event.inputs.location}}
          
          echo create $target_env connectivity rg in $rg_region 
          ./pipelines/management/connectivity.sh --rg_region $rg_region --target_env $target_env
